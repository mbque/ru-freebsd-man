.**  Авторское право (c) 1990, 1991, 1993**
.**  Регенты Калифорнийского университета. Все права защищены.**
.**
Перераспределение и использование в исходном и двоичном кодах, с или без изменений, разрешается при условии соблюдения следующих условий:
.** 1. При перераспределении исходного кода необходимо сохранить указанное выше уведомление об авторских правах, этот список условий и следующее заявление об отказе от ответственности.**
.** 2. При перераспределении в двоичном виде необходимо воспроизвести указанное выше уведомление об авторских правах, этот список условий и следующее заявление об отказе от ответственности в документации и/или других материалах, предоставляемых вместе с распространением.**
.** 3. Ни название университета, ни имена его авторов не могут использоваться для поддержки или продвижения продуктов, полученных из этого программного обеспечения, без предварительного письменного разрешения.**
.**
ДАННОЕ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ РЕГЕНТАМИ И АВТОРАМИ «КАК ЕСТЬ», И ЛЮБЫЕ ЯВНЫЕ ИЛИ ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ЭТИМ, ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ КОММЕРЧЕСКОЙ ПРИГОДНОСТИ И ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННОЙ ЦЕЛИ, ОТКЛОНЯЮТСЯ. РЕГЕНТЫ ИЛИ АВТОРЫ НИ ПРИ КАКИХ ОБСТОЯТЕЛЬСТВАХ НЕ НЕСУТ ОТВЕТСТВЕННОСТИ ЗА КАКИЕ-ЛИБО ПРЯМЫЕ, КОСВЕННЫЕ, СЛУЧАЙНЫЕ, СПЕЦИАЛЬНЫЕ, ШТРАФНЫЕ ИЛИ КОСВЕННЫЕ УЩЕРБЫ (ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ЭТИМ, ПРИОБРЕТЕНИЕ ЗАМЕННЫХ ТОВАРОВ ИЛИ УСЛУГ; ПОТЕРЮ ИСПОЛЬЗОВАНИЯ, ДАННЫХ ИЛИ ПРИБЫЛИ; ИЛИ ПЕРЕРЫВ В БИЗНЕСЕ), КАКИМ БЫ ОНО НИ БЫЛО ВЫЗВАНО И ПО ЛЮБОЙ ТЕОРИИ ОТВЕТСТВЕННОСТИ, БУДЬ ТО ПО ДОГОВОРУ, СТРОГОЙ ОТВЕТСТВЕННОСТИ ИЛИ ДЕЛИКТУ (ВКЛЮЧАЯ НЕОСТОРОЖНОСТЬ ИЛИ ИНЫМ ОБРАЗОМ), ВОЗНИКАЮЩИХ КАКИМ-ЛИБО ОБРАЗОМ В СВЯЗИ С ИСПОЛЬЗОВАНИЕМ ДАННОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ДАЖЕ ЕСЛИ ИМ БЫЛО СООБЩЕНО О ВОЗМОЖНОСТИ ТАКОГО УЩЕРБА.
.**
**   @(#)syslog.conf.5  8.1 (Berkeley) 6/9/93**
.**
.Dd December 10, 2020
.Dt SYSLOG.CONF 5
.Os
.Sh NAME
.Nm syslog.conf
.Nd
.Xr syslogd 8
файл конфигурации
.Sh DESCRIPTION
Этот
.Nm
файл это файл конфигурации для
.Xr syslogd 8
программы.
Он состоит из
блоков строк, разделённых
.Em программой ,
.Em именем хоста
или
.Em фильтром на основе свойств
(разделители появляются отдельно в своих строках),
при этом каждая строка содержит два поля: поле
.Em селектора, которое указывает типы сообщений и приоритеты, к которым применяется строка, и поле
.Em действия, которое указывает действие, выполняемое если данные, полученные в сообщении
.Xr syslogd 8
соответствуют критериям отбора.
Поле
.Em селектора
отделено от поля
.Em действия
одним или несколькими символами табуляции или пробелами.
.Pp
Специальное слово
.Em include
может использоваться для включения всех файлов с именами, заканчивающимися на '.conf' и не начинающимися с точки '.', содержащихся в каталоге, следующем за ключевым словом.
Это ключевое слово можно использовать только в конфигурационном файле первого уровня.
.Pp
Обратите внимание на то, что если вы используете пробелы в качестве разделителей, ваш
.Nm
файл может быть несовместим с другими системами Unix или Unix-подобными системами.
Эта функциональность была добавлена ​​для упрощения конфигурации
(например, ее можно вырезать и вставить в
.Nm ) ,
и избежать возможных ошибок.
Однако, это изменение сохраняет
обратную совместимость со старым стилем
.Nm
(т.е., только символы табуляции).
.Pp
.Em Селекторы
закодированы как:
.Em объект ,
точка
.Pq Dq \&. ,
опциональный набор флагов сравнения
.Pq Oo \&! Oc Op <=> ,
а так же
.Em уровень ,
без каких-либо промежуточных пробелов.
 Как
.Em объект,
так и 
.Em уровень
являются чувствительными к регистру.
.Pp
.Em Объект
описывает часть системы, генерирующую сообщение, и является одним из следующих ключевых слов:
.Cm auth , authpriv , console , cron , daemon , ftp , kern , lpr ,
.Cm mail , mark , news , ntp , security , syslog , user , uucp ,
и
.Cm local0
через
.Cm local7 .
Эти ключевые слова (за исключением mark) соответствуют
аналогичным
.Dq Dv LOG_
значениям, указанным для
.Xr openlog 3
и
.Xr syslog 3
библиотечных функций.
.Pp
.Em Флаги сравнения
могут использоваться для указания того, что именно должно быть записано в журнал.
Значение для сравнения по умолчанию
.Dq =>
(или, если предпочитаете
.Dq >= ) ,
это означает, что сообщения из указанного списка
.Em объектов
с уровнем приоритета,
равным или превышающим 
.Em уровень
будут записываться в журнал.
Флаги сравнения, начинающиеся с 
.Dq Li \&!
будут иметь обратное логическое значение
Таким образом,
.Dq !=info
означает, что все уровни, кроме info и
.Dq !notice
означают то же, что и
.Dq <notice .
.Pp
.Em Уровень
описывает серьезность сообщения и является ключевым словом из следующего упорядоченного списка (от высшего к низшему):
.Cm emerg , alert , crit , err , warning , notice , info
и
.Cm debug .
Эти ключевые слова соответствуют
аналогичным значениям
.Dq Dv LOG_
, указанным для
.Xr syslog 3
библиотечной функции.
.Pp
Каждый блок строк отделяется от предыдущего блока
.Em программой ,
.Em именем хоста
или
.Em фильтром на основе свойств.
Блок будет регистрировать только сообщения, соответствующие самой последней
.Em программе ,
.Em имени хоста
и
.Em заданным спецификациям фильтра на основе свойств.
Таким образом, за блоком, который выбирает
.Ql ppp
в качестве программы
.Em program ,
непосредственно следует блок, которые выбирает сообщения из
.Em имени хоста
.Ql dialhost ,
второй блок будет регистрировать только сообщения
из программы
.Xr ppp 8
на dialhost.
.Pp
.Em программная
спецификация это строка, начинающаяся с
.Ql #!prog
или
.Ql !prog
(первое из них предназначено для совместимости с предыдущей версией syslogd, если кто-то использует файлы .Nm , например)
и следующие блоки будут связаны с вызовыми
.Xr syslog 3
из этой конкретной программы.
.Em программная
спецификация для
.Ql foo
также будет соответствовать любому сообщению, зарегистрированному ядром с префиксом
.Ql "foo: " .
Спецификация
.Ql #!+prog
или
.Ql !+prog
работает так же, как и предыдущая,
а спецификация
.Ql #!-prog
или
.Ql !-prog
будет соответствовать любому сообщению, кроме сообщений из этой
программы.
Несколько программ могут быть перечислены через запятую:
.Ql !prog1,prog2
соответствует сообщениям из любой программы, когда как
.Ql !-prog1,prog2
соответствует всем сообщениям, кроме сообщений из
.Ql prog1
или
.Ql prog2 .
.Pp
Спецификация
.Em имени хоста
в виле
.Ql #+hostname
или
.Ql +hostname
означает, что блоки будут применяться к сообщениям,
полученным от указанного хоста
В качестве альтернативы спецификация
.Em имени хоста
.Ql #-hostname
или
.Ql -hostname
означает, что следующие блоки будут применяться к сообщениям
от любого хоста, кроме указанного.
Если имя хоста задано как
.Ql @ ,
будет использоваться локальное имя хоста.
Как и для программных спецификаций, для спецификаций имени хоста
может быть указано несколько значений, разделённых запятыми.
.Pp
.Em Спецификация фильтра на основе свойств
представляет собой строку, начинающуюся с
.Ql #:
или
.Ql \&:
и следующие блоки будут применяться только в том случае, если значение фильтра
совпадает со значением данного свойства фильтра.
См. раздел
.Sx ФИЛЬТРА НА ОСНОВЕ СВОЙСТВ
для более подробной информации.
.Pp
Спецификация
.Em программы ,
.Em имени хоста
или
.Em фильтра на основе свойств
может быть сброшена, указав
.Ql *
в качестве аргумента.
.Pp
Дополнительные описания ключевых слов и значения
.Em объекта
и
.Em уровня
см. в разделе
.Xr syslog 3
Предпочтительнее выбирать
.Em объект ,
а не
.Em программу ,
так как последняя может легко меняться в сетевом окружении.
Однако, в некоторых ситуациях
подходящего
.Em объекта
просто не существует.
.Pp
Если полученное сообщение соответствует указанному
.Em объекту
и имеет указанный
.Em уровень
.Em (или более высокий уровень) ,
а первое слово в сообщении после даты соответствует
.Em программе ,
будет выполнено действие, указанное в поле
.Em действия
.Pp
Для одного
.Em действия
можно указать несколько
.Em селекторов ,
разделив их точкой с запятой
.Pq Dq \&;
Важно отметить, что каждый
.Em селектор
может изменять предшествующие ему.
.Pp
Для одного
.Em уровня
можно укзать несколько
.Em объектов ,
разделив их символами запятой
.Pq Dq \&,
.Pp
Звёздочка
.Pq Dq *
может использоваться для указания всех
.Em объектов ,
всех
.Em уровней ,
или всех
.Em программ .
.Pp
Специальный
.Em объект
.Dq mark
получает сообщение с приоритетом
.Dq info
каждый 20 минут
(см.
.Xr syslogd 8 ) .
Это не разрешается полем
.Em объекта ,
содержащим звёздочку.
.Pp
Специальный
.Em уровень
.Dq none
отключает определённый
.Em объект .
.Pp
Поле
.Em действия
каждой стоки определяет действие, которое должно быть выполнено, когда поле
.Em селектора
выбирает сообщение.
Существует пять форм:
.Bl -bullet
.It
Имя пуим (начинающееся с ведущей косой черты).
Выбранные сообщения добавляются в файл.
.Pp
Чтобы обеспечить своевременную запись сообщений ядра на диск ,
.Nm
вызывает
.Xr fsync 2
после записи сообщений от ядра.
Другие сообщения не синхронизируются в явном виде.
Вы можете поставить перед именем пути знак минус,
.Dq - ,
чтобы не синхронизировать указанный файл после каждого сообщения ядра.
Обратите внимание на то, что вы можете потерять информацию, если система аварийно завершит работу
сразу после попытки записи.
Тем не менее, использование опции
.Dq -
может повысить производительность,
особенно, если ядро регистрирует много сообщений.
.It
Имя хоста (перед ним ставится знак
.Pq Dq @
).
Выбранные сообщения направляются программе
.Xr syslogd 8
на указанном хосте.
Если номер порта добавлен после двоеточия
.Pq Ql :\& ,
то в качестве порта назначения будет использоваться этот порт,
а не обычный порт syslog.
Адреса IPv6 можно использовать, 
заключив часть адреса в
квадратные скобки
.Po
.Ql [\&
и
.Ql ]\&
.Pc .
.It
Список пользователей, разделённый запятыми.
Выьранные сообщения будут написаны этим пользователем, 
если они вошли в систему.
.It
Звёздочка.
Выбранные сообщения будут написаны всем вошедшим пользователям.
.It
Вертикальная черта
.Pq Dq \&| ,
за которой следует команда для отправки выбранных сообщений по каналам.
Команда передаётся в
.Xr sh 1
для оценки, поэтому могут использоваться обычные метасимволы или перенаправление
ввода/вывода.
(Обратите внимание, что перенаправление буферизированного вывода
.Xr stdio 3
от вызванной команды может привести к дополнительным задержкам,
или даже к потере выходных данных в случае, если процесспротоколирования завершился с
сигналом.)
Сама команда выполняется с перенаправлением
.Em stdout
и
.Em stderr
в
.Pa /dev/null .
Получив сигнал
.Dv SIGHUP ,
.Xr syslogd 8
закроет канал связи с процессом.
Если процесс не завершился
добровольно, ему будет послан сигнал
.Dv SIGTERM
после льготного периода до 60 секунд.
.\" Все переводчики перводят как "льготный"
.Pp
Команда будет запущена только после поступления данных, которые должны быть переданы ей по каналу связи. 
Если она завершилась позже, она будет будет перезапущена при необходимости.
Таким образом,
если необходимоЮ чтобы подпроцесс получал только одну строку вхоных данных
(что может быть очень ресурсоёмким при быстром поступлении большого количества сообщений), этого можно добиться, завершив работу только после одной строки
ввода.
При необходимости, для этого может быть написана оболочка скрипта.
.Pp
Unless the command is a full pipeline, it is probably useful to
.\"Не могу подобрать перевод для pipeline в этом контексте
start the command with
.Em exec
so that the invoking shell process does not wait for the command to
complete.
Предупреждение: процесс запускается под UID, вызывающим
.Xr syslogd 8 ,
обычно это суперпользователь.
.El
.Pp
Пустые строки и линии, в которых первым непустым символом является символ хэша
.Pq Dq #
игнорируются.
Если
.Ql #
расположен в середине строки, то символ
.Ql #
и остальная часть строки после него игнорируется.
Для предотвращения специального значения символ
.Ql #
может быть экранирован с помощью
.Ql \e ;
в этом случае предшествующий
.Ql \e
удаляется, а
.Ql #
рассматривается как обычный символ.
.Sh ФИЛЬТРЫ НА ОСНОВЕ СВОЙСТВ
.Em программа ,
указывающая
.Em имя хоста
выполняет фильтрацию точного соответствия только по явному полю.
.Em Фильтры на основе свойств
содержат подстроки и регулярные выражения (см.
.Xr re_format 7 ) ,
соответствующие различным атрибутам сообщений.
Спецификация фильтра начинается с 
.Ql #:
или
.Ql \&: ,
за которыми следует три поля, разделённых запятыми:
.Em свойство , оператор , \&"значение\&" .
Значание должно быть заключено в двойные кавычки.
Двойные кавычки и обратная косая черта должны быть экранированы обратной косой чертой.
.Pp
В качестве тестового значение поддерживаются следующие
.Em свойства :
.Pp
.Bl -bullet -compact
.It
.Ql msg
- тело полученного сообщения.
.It
.Ql programname
- имя программы, отправившей сообщение.
.It
.Ql hostname
- имя хоста отправителя сообщения
.It
.Ql source
- псевдоним для имени хоста
.El
.Pp
Оператор задаёт функцию сравнения между значением
.Em свойства
и значением фильтра.
Возможные операторы:
.Pp
.Bl -bullet -compact
.It
.Ql contains
- истинно, если значение фильтра является подстрокой
.Em свойства
.It
.Ql isequal
- истинно, если значение фильтра равно
.Em свойству
.It
.Ql startswith
- истинно, если свойство начинается со значения фильтра
.It
.Ql regex
- истинно, если свойство соответствует основному регулярному выражению, определённому в значении фильтра
.It
.Ql ereregex
- истинно, если свойство соответствует расширенному регулярному выражению, определённому в значении фильтра
.El
.Pp
Оператор может иметь следующие префиксы:
.Pp
.Bl -bullet -compact
.It
.Ql \&!
- для инвертирования логики сравнения
.It
.Ql icase_
- чтобы сделать функцию сравнения нечувствительной к регистру
.El
.Sh ПРИМЕЧАНИЯ ПО РЕАЛИЗАЦИИ
Функция
.Dq kern
обычно зарезервирована для сообщений,
генерируемых локальным ядром.
Другие сообщения, регистрируемые с помощью функции
.Dq kern
обычно переводятся в функцию
.Dq user .
Этот перевод можно отключить;
см. подробности в
.Xr syslogd 8
.Sh ФАЙЛЫ
.Bl -tag -width /etc/syslog.conf -compact
.It Pa /etc/syslog.conf
.Xr syslogd 8
файл конфигурации
.El
.Sh ПРИМЕРЫ
Файл конфигурации может выглядеть следующим образом:
.Bd -literal
# Log all kernel messages, authentication messages of
# level notice or higher, and anything of level err or
# higher to the console.
# Do not log private authentication messages!
*.err;kern.*;auth.notice;authpriv.none;mail.crit	/dev/console

# Log anything (except mail) of level info or higher.
# Do not log private authentication messages!
*.info;mail.none;authpriv.none		/var/log/messages

# Log daemon messages at debug level only
daemon.=debug						/var/log/daemon.debug

# The authpriv file has restricted access.
authpriv.*						/var/log/secure

# Log all the mail messages in one place.
mail.*							/var/log/maillog

# Everybody gets emergency messages, plus log them on another
# machine.
*.emerg							*
*.emerg							@arpa.berkeley.edu

# Root and Eric get alert and higher messages.
*.alert							root,eric

# Save mail and news errors of level err and higher in a
# special file.
uucp,news.crit						/var/log/spoolerr

# Pipe all authentication messages to a filter.
auth.*					|exec /usr/local/sbin/authfilter

# Log all security messages to a separate file.
security.*						/var/log/security

# Log all writes to /dev/console to a separate file.
console.*						/var/log/console.log

# Save ftpd transactions along with mail and news
!ftpd
*.*							/var/log/spoolerr

# Log ipfw messages without syncing after every message.
!ipfw
*.*							-/var/log/ipfw

# Log ipfw messages with "Deny" in the message body.
:msg, contains, ".*Deny.*"
*.*							/var/log/ipfw.deny

# Reset program name filtering
!*

# Log messages from bird or bird6 into one file
:programname, regex, "^bird6?$"
*.*							/var/log/bird-all.log

# Log messages from servers in racks 10-19 in multiple locations, case insensitive
:hostname, icase_ereregex, "^server-(dcA|podB|cdn)-rack1[0-9]{2}\\..*"
*.*							/var/log/racks10..19.log
.Ed
.Sh SEE ALSO
.Xr syslog 3 ,
.Xr syslogd 8
.Sh BUGS
The effects of multiple
.Em selectors
are sometimes not intuitive.
For example
.Dq mail.crit,*.err
will select
.Dq mail
facility messages at the level of
.Dq err
or higher, not at the level of
.Dq crit
or higher.
.Pp
In networked environments, note that not all operating systems
implement the same set of facilities.
The facilities
authpriv, cron, ftp, and ntp that are known to this implementation
might be absent on the target system.
Even worse, DEC UNIX uses
facility number 10 (which is authpriv in this implementation) to
log events for their AdvFS file system.
