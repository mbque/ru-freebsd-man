.**  Авторское право (c) 1990, 1991, 1993**
.**  Регенты Калифорнийского университета. Все права защищены.**
.**
Перераспределение и использование в исходном и двоичном кодах, с или без изменений, разрешается при условии соблюдения следующих условий:
.** 1. При перераспределении исходного кода необходимо сохранить указанное выше уведомление об авторских правах, этот список условий и следующее заявление об отказе от ответственности.**
.** 2. При перераспределении в двоичном виде необходимо воспроизвести указанное выше уведомление об авторских правах, этот список условий и следующее заявление об отказе от ответственности в документации и/или других материалах, предоставляемых вместе с распространением.**
.** 3. Ни название университета, ни имена его авторов не могут использоваться для поддержки или продвижения продуктов, полученных из этого программного обеспечения, без предварительного письменного разрешения.**
.**
ДАННОЕ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ РЕГЕНТАМИ И АВТОРАМИ «КАК ЕСТЬ», И ЛЮБЫЕ ЯВНЫЕ ИЛИ ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ, ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ЭТИМ, ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ КОММЕРЧЕСКОЙ ПРИГОДНОСТИ И ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННОЙ ЦЕЛИ, ОТКЛОНЯЮТСЯ. РЕГЕНТЫ ИЛИ АВТОРЫ НИ ПРИ КАКИХ ОБСТОЯТЕЛЬСТВАХ НЕ НЕСУТ ОТВЕТСТВЕННОСТИ ЗА КАКИЕ-ЛИБО ПРЯМЫЕ, КОСВЕННЫЕ, СЛУЧАЙНЫЕ, СПЕЦИАЛЬНЫЕ, ШТРАФНЫЕ ИЛИ КОСВЕННЫЕ УЩЕРБЫ (ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ЭТИМ, ПРИОБРЕТЕНИЕ ЗАМЕННЫХ ТОВАРОВ ИЛИ УСЛУГ; ПОТЕРЮ ИСПОЛЬЗОВАНИЯ, ДАННЫХ ИЛИ ПРИБЫЛИ; ИЛИ ПЕРЕРЫВ В БИЗНЕСЕ), КАКИМ БЫ ОНО НИ БЫЛО ВЫЗВАНО И ПО ЛЮБОЙ ТЕОРИИ ОТВЕТСТВЕННОСТИ, БУДЬ ТО ПО ДОГОВОРУ, СТРОГОЙ ОТВЕТСТВЕННОСТИ ИЛИ ДЕЛИКТУ (ВКЛЮЧАЯ НЕОСТОРОЖНОСТЬ ИЛИ ИНЫМ ОБРАЗОМ), ВОЗНИКАЮЩИХ КАКИМ-ЛИБО ОБРАЗОМ В СВЯЗИ С ИСПОЛЬЗОВАНИЕМ ДАННОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ, ДАЖЕ ЕСЛИ ИМ БЫЛО СООБЩЕНО О ВОЗМОЖНОСТИ ТАКОГО УЩЕРБА.
.**
**   @(#)syslog.conf.5  8.1 (Berkeley) 6/9/93**
.**
.Dd December 10, 2020
.Dt SYSLOG.CONF 5
.Os
.Sh NAME
.Nm syslog.conf
.Nd
.Xr syslogd 8
файл конфигурации
.Sh DESCRIPTION
Этот
.Nm
файл это файл конфигурации для
.Xr syslogd 8
программы.
Он состоит из
блоков строк, разделённых
.Em программой ,
.Em именем хоста
или
.Em фильтром на основе свойств
(разделители появляются отдельно в своих строках),
при этом каждая строка содержит два поля: поле
.Em селектора, которое указывает типы сообщений и приоритеты, к которым применяется строка, и поле
.Em действия, которое указывает действие, выполняемое если данные, полученные в сообщении
.Xr syslogd 8
соответствуют критериям отбора.
Поле
.Em селектора
отделено от поля
.Em действия
одним или несколькими символами табуляции или пробелами.
.Pp
Специальное слово
.Em include
может использоваться для включения всех файлов с именами, заканчивающимися на '.conf' и не начинающимися с точки '.', содержащихся в каталоге, следующем за ключевым словом.
Это ключевое слово можно использовать только в конфигурационном файле первого уровня.
.Pp
Обратите внимание на то, что если вы используете пробелы в качестве разделителей, ваш
.Nm
файл может быть несовместим с другими системами Unix или Unix-подобными системами.
Эта функциональность была добавлена ​​для упрощения конфигурации
(например, ее можно вырезать и вставить в
.Nm ) ,
и избежать возможных ошибок.
Однако, это изменение сохраняет
обратную совместимость со старым стилем
.Nm
(т.е., только символы табуляции).
.Pp
.Em Селекторы
закодированы как
.Em объект ,
период
.Pq Dq \&. ,
опциональный набор флагов сравнения
.Pq Oo \&! Oc Op <=> ,
а так же
.Em уровень ,
без каких-либо промежуточных пробелов.
 Как
.Em объект,
так и 
.Em уровень
являются чувствительными к регистру.
.Pp
.Em Объект
описывает часть системы, генерирующую сообщение, и является одним из следующих ключевых слов:
.Cm auth , authpriv , console , cron , daemon , ftp , kern , lpr ,
.Cm mail , mark , news , ntp , security , syslog , user , uucp ,
и
.Cm local0
через
.Cm local7 .
Эти ключевые слова (за исключением mark) соответствуют
аналогичным
.Dq Dv LOG_
значениям, указанным для
.Xr openlog 3
и
.Xr syslog 3
библиотечных функций.
.Pp
.Em Флаги сравнения
могут использоваться для указания того, что именно должно быть записано в журнал.
Значение для сравнения по умолчанию
.Dq =>
(или, если предпочитаете
.Dq >= ) ,
это означает, что сообщения из указанного списка
.Em объектов
с уровнем приоритета,
равным или превышающим 
.Em уровень
будут записываться в журнал.
Флаги сравнения, начинающиеся с 
.Dq Li \&!
будут иметь обратное логическое значение
Таким образом,
.Dq !=info
означает, что все уровни, кроме info и
.Dq !notice
означают то же, что и
.Dq <notice .
.Pp
.Em Уровень
описывает серьезность сообщения и является ключевым словом из следующего упорядоченного списка (от высшего к низшему):
.Cm emerg , alert , crit , err , warning , notice , info
и
.Cm debug .
Эти ключевые слова соответствуют
аналогичным значениям
.Dq Dv LOG_
, указанным для
.Xr syslog 3
библиотечной функции.
.Pp
Каждый блок строк отделяется от предыдущего блока
.Em программой ,
.Em именем хоста
или
.Em фильтром на основе свойств.
Блок будет регистрировать только сообщения, соответствующие самой последней
.Em программе ,
.Em имени хоста
и
.Em заданным спецификациям фильтра на основе свойств.
Таким образом, за блоком, который выбирает
.Ql ppp
в качестве программы
.Em program ,
непосредственно следует блок, которые выбирает сообщения из
.Em имени хоста
.Ql dialhost ,
второй блок будет регистрировать только сообщения
из программы
.Xr ppp 8
на dialhost.
.Pp
.Em программная
спецификация это строка, начинающаяся с
.Ql #!prog
или
.Ql !prog
(первое из них предназначено для совместимости с предыдущей версией syslogd, если кто-то использует файлы .Nm , например)
и следующие блоки будут связаны с вызовыми
.Xr syslog 3
из этой конкретной программы.
.Em программная
спецификация для
.Ql foo
также будет соответствовать любому сообщению, зарегистрированному ядром с префиксом
.Ql "foo: " .
Спецификация
.Ql #!+prog
или
.Ql !+prog
работает так же, как и предыдущая,
а спецификация
.Ql #!-prog
или
.Ql !-prog
будет соответствовать любому сообщению, кроме сообщений из этой
программы.
Несколько программ могут быть перечислены через запятую:
.Ql !prog1,prog2
соответствует сообщениям из любой программы, когда как
.Ql !-prog1,prog2
соответствует всем сообщениям, кроме сообщений из
.Ql prog1
или
.Ql prog2 .
.Pp
A
.Em hostname
specification of the form
.Ql #+hostname
or
.Ql +hostname
means the following blocks will be applied to messages
received from the specified hostname.
Alternatively, the
.Em hostname
specification
.Ql #-hostname
or
.Ql -hostname
causes the following blocks to be applied to messages
from any host but the one specified.
If the hostname is given as
.Ql @ ,
the local hostname will be used.
As for program specifications, multiple comma-separated
values may be specified for hostname specifications.
.Pp
A
.Em property-based filter
specification is a line beginning with
.Ql #:
or
.Ql \&:
and the following blocks will be applied only when filter value
matches given filter propertie's value.
See
.Sx PROPERTY-BASED FILTERS
section for more details.
.Pp
A
.Em program ,
.Em hostname
or
.Em property-based filter
specification may be reset by giving
.Ql *
as an argument.
.Pp
See
.Xr syslog 3
for further descriptions of both the
.Em facility
and
.Em level
keywords and their significance.
It is preferred that selections be made on
.Em facility
rather than
.Em program ,
since the latter can easily vary in a networked environment.
In some cases,
though, an appropriate
.Em facility
simply does not exist.
.Pp
If a received message matches the specified
.Em facility
and is of the specified
.Em level
.Em (or a higher level) ,
and the first word in the message after the date matches the
.Em program ,
the action specified in the
.Em action
field will be taken.
.Pp
Multiple
.Em selectors
may be specified for a single
.Em action
by separating them with semicolon
.Pq Dq \&;
characters.
It is important to note, however, that each
.Em selector
can modify the ones preceding it.
.Pp
Multiple
.Em facilities
may be specified for a single
.Em level
by separating them with comma
.Pq Dq \&,
characters.
.Pp
An asterisk
.Pq Dq *
can be used to specify all
.Em facilities ,
all
.Em levels ,
or all
.Em programs .
.Pp
The special
.Em facility
.Dq mark
receives a message at priority
.Dq info
every 20 minutes
(see
.Xr syslogd 8 ) .
This is not enabled by a
.Em facility
field containing an asterisk.
.Pp
The special
.Em level
.Dq none
disables a particular
.Em facility .
.Pp
The
.Em action
field of each line specifies the action to be taken when the
.Em selector
field selects a message.
There are five forms:
.Bl -bullet
.It
A pathname (beginning with a leading slash).
Selected messages are appended to the file.
.Pp
To ensure that kernel messages are written to disk promptly,
.Nm
calls
.Xr fsync 2
after writing messages from the kernel.
Other messages are not synced explicitly.
You may prefix a pathname with the minus sign,
.Dq - ,
to forego syncing the specified file after every kernel message.
Note that you might lose information if the system crashes
immediately following a write attempt.
Nevertheless, using the
.Dq -
option may improve performance,
especially if the kernel is logging many messages.
.It
A hostname (preceded by an at
.Pq Dq @
sign).
Selected messages are forwarded to the
.Xr syslogd 8
program on the named host.
If a port number is added after a colon
.Pq Ql :\&
then that port will be used as the destination port
rather than the usual syslog port.
IPv6 addresses can be used
by surrounding the address portion with
square brackets
.Po
.Ql [\&
and
.Ql ]\&
.Pc .
.It
A comma separated list of users.
Selected messages are written to those users
if they are logged in.
.It
An asterisk.
Selected messages are written to all logged-in users.
.It
A vertical bar
.Pq Dq \&| ,
followed by a command to pipe the selected
messages to.
The command is passed to
.Xr sh 1
for evaluation, so usual shell metacharacters or input/output
redirection can occur.
(Note however that redirecting
.Xr stdio 3
buffered output from the invoked command can cause additional delays,
or even lost output data in case a logging subprocess exited with a
signal.)
The command itself runs with
.Em stdout
and
.Em stderr
redirected to
.Pa /dev/null .
Upon receipt of a
.Dv SIGHUP ,
.Xr syslogd 8
will close the pipe to the process.
If the process did not exit
voluntarily, it will be sent a
.Dv SIGTERM
signal after a grace period of up to 60 seconds.
.Pp
The command will only be started once data arrives that should be piped
to it.
If it exited later, it will be restarted as necessary.
So if it
is desired that the subprocess should get exactly one line of input only
(which can be very resource-consuming if there are a lot of messages
flowing quickly), this can be achieved by exiting after just one line of
input.
If necessary, a script wrapper can be written to this effect.
.Pp
Unless the command is a full pipeline, it is probably useful to
start the command with
.Em exec
so that the invoking shell process does not wait for the command to
complete.
Warning: the process is started under the UID invoking
.Xr syslogd 8 ,
normally the superuser.
.El
.Pp
Blank lines and lines whose first non-blank character is a hash
.Pq Dq #
character are ignored.
If
.Ql #
is placed in the middle of the line, the
.Ql #
character and the rest of the line after it is ignored.
To prevent special meaning, the
.Ql #
character may be escaped with
.Ql \e ;
in this case preceding
.Ql \e
is removed and
.Ql #
is treated as an ordinary character.
.Sh PROPERTY-BASED FILTERS
.Em program ,
.Em hostname
specifications performs exact match filtering against explicit field only.
.Em Property-based filters
feature substring and regular expressions (see
.Xr re_format 7 )
matching against various message attributes.
Filter specification starts with
.Ql #:
or
.Ql \&:
followed by three comma-separated fields
.Em property , operator , \&"value\&" .
Value must be double-quoted.
A double quote and backslash must be escaped by a backslash.
.Pp
Following
.Em properties
are supported as test value:
.Pp
.Bl -bullet -compact
.It
.Ql msg
- body of the message received.
.It
.Ql programname
- program name sent the message
.It
.Ql hostname
- hostname of message's originator
.It
.Ql source
- an alias for hostname
.El
.Pp
Operator specifies a comparison function between
.Em propertie's
 value against filter's value.
Possible operators:
.Pp
.Bl -bullet -compact
.It
.Ql contains
- true if filter value is found as a substring of
.Em property
.It
.Ql isequal
- true if filter value is equal to
.Em property
.It
.Ql startswith
- true if property starts with filter value
.It
.Ql regex
- true if property matches basic regular expression defined in filter value
.It
.Ql ereregex
- true if property matches extended regular expression defined in filter value
.El
.Pp
Operator may be prefixed by
.Pp
.Bl -bullet -compact
.It
.Ql \&!
- to invert compare logic
.It
.Ql icase_
- to make comparison function case insensitive
.El
.Sh IMPLEMENTATION NOTES
The
.Dq kern
facility is usually reserved for messages
generated by the local kernel.
Other messages logged with facility
.Dq kern
are usually translated to facility
.Dq user .
This translation can be disabled;
see
.Xr syslogd 8
for details.
.Sh FILES
.Bl -tag -width /etc/syslog.conf -compact
.It Pa /etc/syslog.conf
.Xr syslogd 8
configuration file
.El
.Sh EXAMPLES
A configuration file might appear as follows:
.Bd -literal
# Log all kernel messages, authentication messages of
# level notice or higher, and anything of level err or
# higher to the console.
# Do not log private authentication messages!
*.err;kern.*;auth.notice;authpriv.none;mail.crit	/dev/console

# Log anything (except mail) of level info or higher.
# Do not log private authentication messages!
*.info;mail.none;authpriv.none		/var/log/messages

# Log daemon messages at debug level only
daemon.=debug						/var/log/daemon.debug

# The authpriv file has restricted access.
authpriv.*						/var/log/secure

# Log all the mail messages in one place.
mail.*							/var/log/maillog

# Everybody gets emergency messages, plus log them on another
# machine.
*.emerg							*
*.emerg							@arpa.berkeley.edu

# Root and Eric get alert and higher messages.
*.alert							root,eric

# Save mail and news errors of level err and higher in a
# special file.
uucp,news.crit						/var/log/spoolerr

# Pipe all authentication messages to a filter.
auth.*					|exec /usr/local/sbin/authfilter

# Log all security messages to a separate file.
security.*						/var/log/security

# Log all writes to /dev/console to a separate file.
console.*						/var/log/console.log

# Save ftpd transactions along with mail and news
!ftpd
*.*							/var/log/spoolerr

# Log ipfw messages without syncing after every message.
!ipfw
*.*							-/var/log/ipfw

# Log ipfw messages with "Deny" in the message body.
:msg, contains, ".*Deny.*"
*.*							/var/log/ipfw.deny

# Reset program name filtering
!*

# Log messages from bird or bird6 into one file
:programname, regex, "^bird6?$"
*.*							/var/log/bird-all.log

# Log messages from servers in racks 10-19 in multiple locations, case insensitive
:hostname, icase_ereregex, "^server-(dcA|podB|cdn)-rack1[0-9]{2}\\..*"
*.*							/var/log/racks10..19.log
.Ed
.Sh SEE ALSO
.Xr syslog 3 ,
.Xr syslogd 8
.Sh BUGS
The effects of multiple
.Em selectors
are sometimes not intuitive.
For example
.Dq mail.crit,*.err
will select
.Dq mail
facility messages at the level of
.Dq err
or higher, not at the level of
.Dq crit
or higher.
.Pp
In networked environments, note that not all operating systems
implement the same set of facilities.
The facilities
authpriv, cron, ftp, and ntp that are known to this implementation
might be absent on the target system.
Even worse, DEC UNIX uses
facility number 10 (which is authpriv in this implementation) to
log events for their AdvFS file system.
